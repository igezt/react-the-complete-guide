{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pierce Ng\\\\Desktop\\\\Personal Projects\\\\React - The Complete Guide\\\\practice-react-routing 2\\\\frontend\\\\src\\\\pages\\\\EditEvent.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { json, useRouteLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditEventPage = () => {\n  _s();\n  const data = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(EventForm, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n};\n_s(EditEventPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EditEventPage;\nexport default EditEventPage;\nasync function action(_ref) {\n  let {\n    param,\n    request\n  } = _ref;\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    return json({\n      message: \"Oh no!\",\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EditEventPage\");","map":{"version":3,"names":["React","json","useRouteLoaderData","EventsList","EventForm","jsxDEV","_jsxDEV","EditEventPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","param","request","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/Users/Pierce Ng/Desktop/Personal Projects/React - The Complete Guide/practice-react-routing 2/frontend/src/pages/EditEvent.js"],"sourcesContent":["import React from \"react\";\r\nimport { json, useRouteLoaderData } from \"react-router-dom\";\r\nimport EventsList from \"../components/EventsList\";\r\nimport EventForm from \"../components/EventForm\";\r\n\r\nconst EditEventPage = () => {\r\n  const data = useRouteLoaderData(\"event-detail\");\r\n\r\n  return <EventForm event={data.event} />;\r\n};\r\n\r\nexport default EditEventPage;\r\n\r\nasync function action({ param, request }) {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n  if (!response.ok) {\r\n    return json({ message: \"Oh no!\", status: 500 });\r\n  } else {\r\n    return response;\r\n  }\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,kBAAkB,QAAQ,kBAAkB;AAC3D,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,IAAI,GAAGP,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBAAOI,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzC,CAAC;AAACN,EAAA,CAJID,aAAa;EAAA,QACJL,kBAAkB;AAAA;AAAAa,EAAA,GAD3BR,aAAa;AAMnB,eAAeA,aAAa;AAE5B,eAAeS,MAAMA,CAAAC,IAAA,EAAqB;EAAA,IAApB;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EACtC,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAOrB,IAAI,CAAC;MAAEsB,OAAO,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACjD,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAAC,IAAAL,EAAA;AAAAU,YAAA,CAAAV,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
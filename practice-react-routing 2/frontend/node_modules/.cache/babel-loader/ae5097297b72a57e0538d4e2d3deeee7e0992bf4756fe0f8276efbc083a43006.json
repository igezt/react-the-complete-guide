{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pierce Ng\\\\Desktop\\\\Personal Projects\\\\React - The Complete Guide\\\\practice-react-routing 2\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport RootLayout from \"./pages/RootLayout\";\nimport HomePage from \"./pages/Home\";\nimport EventsPage, { loader as eventsLoader } from \"./pages/Events\";\nimport EventDetailPage from \"./pages/EventDetail\";\nimport EditEventPage from \"./pages/EditEvent\";\nimport NewEventPage from \"./pages/NewEvent\";\nimport ErrorPage from \"./pages/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 18\n    }, this)\n  }, {\n    element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }, this),\n    path: \"events\",\n    loader: eventsLoader,\n    children: [{\n      element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 22\n      }, this),\n      path: \":id\"\n    }, {\n      element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 22\n      }, this),\n      path: \":id/edit\"\n    }, {\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 22\n      }, this),\n      path: \"new\"\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","RootLayout","HomePage","EventsPage","loader","eventsLoader","EventDetailPage","EditEventPage","NewEventPage","ErrorPage","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","App","_c","$RefreshReg$"],"sources":["C:/Users/Pierce Ng/Desktop/Personal Projects/React - The Complete Guide/practice-react-routing 2/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport RootLayout from \"./pages/RootLayout\";\nimport HomePage from \"./pages/Home\";\nimport EventsPage, { loader as eventsLoader } from \"./pages/Events\";\nimport EventDetailPage from \"./pages/EventDetail\";\nimport EditEventPage from \"./pages/EditEvent\";\nimport NewEventPage from \"./pages/NewEvent\";\nimport ErrorPage from \"./pages/Error\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootLayout />,\n    errorElement: <ErrorPage />,\n    children: [\n      {\n        index: true,\n        element: <HomePage />,\n      },\n      {\n        element: <EventsPage />,\n        path: \"events\",\n        loader: eventsLoader,\n        children: [\n          { element: <EventDetailPage />, path: \":id\" },\n          { element: <EditEventPage />, path: \":id/edit\" },\n          { element: <NewEventPage />, path: \"new\" },\n        ],\n      },\n    ],\n  },\n]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,UAAU,IAAIC,MAAM,IAAIC,YAAY,QAAQ,gBAAgB;AACnE,OAAOC,eAAe,MAAM,qBAAqB;AACjD,OAAOC,aAAa,MAAM,mBAAmB;AAC7C,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,SAAS,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGZ,mBAAmB,CAAC,CACjC;EACEa,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACV,UAAU;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACvBC,YAAY,eAAER,OAAA,CAACF,SAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC3BE,QAAQ,EAAE,CACR;IACEC,KAAK,EAAE,IAAI;IACXP,OAAO,eAAEH,OAAA,CAACT,QAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACtB,CAAC,EACD;IACEJ,OAAO,eAAEH,OAAA,CAACR,UAAU;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACvBL,IAAI,EAAE,QAAQ;IACdT,MAAM,EAAEC,YAAY;IACpBe,QAAQ,EAAE,CACR;MAAEN,OAAO,eAAEH,OAAA,CAACL,eAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAAEL,IAAI,EAAE;IAAM,CAAC,EAC7C;MAAEC,OAAO,eAAEH,OAAA,CAACJ,aAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAAEL,IAAI,EAAE;IAAW,CAAC,EAChD;MAAEC,OAAO,eAAEH,OAAA,CAACH,YAAY;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAAEL,IAAI,EAAE;IAAM,CAAC;EAE9C,CAAC;AAEL,CAAC,CACF,CAAC;AAEF,SAASS,GAAGA,CAAA,EAAG;EACb,oBAAOX,OAAA,CAACZ,cAAc;IAACa,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACK,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
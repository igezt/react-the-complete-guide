{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pierce Ng\\\\Desktop\\\\Personal Projects\\\\React - The Complete Guide\\\\practice-react-routing 2\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { json, useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsPage = () => {\n  _s();\n  const events = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(EventsList, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n_s(EventsPage, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport const loader = async _ref => {\n  let {\n    request,\n    params\n  } = _ref;\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    return json({\n      message: \"Oh no!\",\n      status: 500\n    });\n  } else {\n    const data = await response.json();\n    return data.events;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["React","json","useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","params","response","fetch","ok","message","status","data","$RefreshReg$"],"sources":["C:/Users/Pierce Ng/Desktop/Personal Projects/React - The Complete Guide/practice-react-routing 2/frontend/src/pages/Events.js"],"sourcesContent":["import React from \"react\";\r\nimport { json, useLoaderData } from \"react-router-dom\";\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nconst EventsPage = () => {\r\n  const events = useLoaderData();\r\n\r\n  return <EventsList />;\r\n};\r\n\r\nexport default EventsPage;\r\n\r\nexport const loader = async ({ request, params }) => {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n  if (!response.ok) {\r\n    return json({ message: \"Oh no!\", status: 500 });\r\n  } else {\r\n    const data = await response.json();\r\n    return data.events;\r\n  }\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACtD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,MAAM,GAAGN,aAAa,CAAC,CAAC;EAE9B,oBAAOG,OAAA,CAACF,UAAU;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvB,CAAC;AAACL,EAAA,CAJID,UAAU;EAAA,QACCJ,aAAa;AAAA;AAAAW,EAAA,GADxBP,UAAU;AAMhB,eAAeA,UAAU;AAEzB,OAAO,MAAMQ,MAAM,GAAG,MAAAC,IAAA,IAA+B;EAAA,IAAxB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9C,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAOnB,IAAI,CAAC;MAAEoB,OAAO,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACjD,CAAC,MAAM;IACL,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACjB,IAAI,CAAC,CAAC;IAClC,OAAOsB,IAAI,CAACf,MAAM;EACpB;AACF,CAAC;AAAC,IAAAK,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
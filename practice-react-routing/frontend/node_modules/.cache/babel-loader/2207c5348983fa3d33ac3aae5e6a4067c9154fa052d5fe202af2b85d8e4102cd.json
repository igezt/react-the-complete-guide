{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pierce Ng\\\\Desktop\\\\Personal Projects\\\\React - The Complete Guide\\\\practice-react-routing\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { json, useLoaderData } from \"react-router\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const events = useLoaderData();\n  if (events.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: events.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    return json({\n      message: \"Could not load events\",\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["json","useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","status","resData","$RefreshReg$"],"sources":["C:/Users/Pierce Ng/Desktop/Personal Projects/React - The Complete Guide/practice-react-routing/frontend/src/pages/Events.js"],"sourcesContent":["import { json, useLoaderData } from \"react-router\";\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventsPage() {\r\n  const events = useLoaderData();\r\n\r\n  if (events.isError) {\r\n    return <p>{events.message}</p>;\r\n  }\r\n\r\n  return <EventsList events={events} />;\r\n}\r\n\r\nexport default EventsPage;\r\nexport async function loader() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  if (!response.ok) {\r\n    return json({ message: \"Could not load events\", status: 500 });\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.events;\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,QAAQ,cAAc;AAClD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGN,aAAa,CAAC,CAAC;EAE9B,IAAIM,MAAM,CAACC,OAAO,EAAE;IAClB,oBAAOJ,OAAA;MAAAK,QAAA,EAAIF,MAAM,CAACG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAChC;EAEA,oBAAOV,OAAA,CAACF,UAAU;IAACK,MAAM,EAAEA;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvC;AAACR,EAAA,CARQD,UAAU;EAAA,QACFJ,aAAa;AAAA;AAAAc,EAAA,GADrBV,UAAU;AAUnB,eAAeA,UAAU;AACzB,OAAO,eAAeW,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAOnB,IAAI,CAAC;MAAEU,OAAO,EAAE,uBAAuB;MAAEU,MAAM,EAAE;IAAI,CAAC,CAAC;EAChE,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAACjB,IAAI,CAAC,CAAC;IACrC,OAAOqB,OAAO,CAACd,MAAM;EACvB;AACF;AAAC,IAAAQ,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
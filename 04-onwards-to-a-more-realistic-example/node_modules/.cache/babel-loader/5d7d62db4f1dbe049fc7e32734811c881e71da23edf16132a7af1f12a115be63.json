{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nconst useHttp = applyData => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async requestConfig => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n        headers: requestConfig.headers ? requestConfig.headers : {}\n      });\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n_s(useHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\nexport default useHttp;","map":{"version":3,"names":["useCallback","useState","useHttp","applyData","_s","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","response","fetch","url","method","body","JSON","stringify","headers","ok","Error","data","json","err","message"],"sources":["C:/Users/Pierce Ng/Desktop/Personal Projects/React - The Complete Guide/04-onwards-to-a-more-realistic-example/src/hooks/use-http.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\n\r\nconst useHttp = (applyData) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const sendRequest = useCallback(async (requestConfig) => {\r\n\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n          const response = await fetch(\r\n            requestConfig.url,\r\n            {\r\n              method: requestConfig.method ? requestConfig.method : \"GET\",\r\n              body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n              headers: requestConfig.headers ? requestConfig.headers : {},\r\n            }\r\n          );\r\n    \r\n          if (!response.ok) {\r\n            throw new Error('Request failed!');\r\n          }\r\n    \r\n          const data = await response.json();\r\n    \r\n          applyData(data)\r\n        } catch (err) {\r\n          setError(err.message || 'Something went wrong!');\r\n        }\r\n        setIsLoading(false);\r\n    }, []);\r\n    return { isLoading, error, sendRequest };\r\n  };\r\n\r\nexport default useHttp;"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,MAAMC,OAAO,GAAIC,SAAS,IAAK;EAAAC,EAAA;EAE3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,WAAW,GAAGT,WAAW,CAAC,MAAOU,aAAa,IAAK;IAErDJ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAC1BF,aAAa,CAACG,GAAG,EACjB;QACEC,MAAM,EAAEJ,aAAa,CAACI,MAAM,GAAGJ,aAAa,CAACI,MAAM,GAAG,KAAK;QAC3DC,IAAI,EAAEL,aAAa,CAACK,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACP,aAAa,CAACK,IAAI,CAAC,GAAG,IAAI;QACpEG,OAAO,EAAER,aAAa,CAACQ,OAAO,GAAGR,aAAa,CAACQ,OAAO,GAAG,CAAC;MAC5D,CACF,CAAC;MAED,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAElCnB,SAAS,CAACkB,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZf,QAAQ,CAACe,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAlB,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IAAED,SAAS;IAAEE,KAAK;IAAEE;EAAY,CAAC;AAC1C,CAAC;AAACL,EAAA,CAhCEF,OAAO;AAkCb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
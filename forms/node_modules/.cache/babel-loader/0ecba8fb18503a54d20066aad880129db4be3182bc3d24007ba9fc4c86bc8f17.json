{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useReducer, useState } from \"react\";\nconst initialInputState = {\n  value: '',\n  isTouched: false\n};\nconst inputStateReducer = (state, action) => {\n  return initialInputState;\n};\nconst useInput = validateValue => {\n  _s();\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [valueIsTouched, setValueIsTouched] = useState(false);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && valueIsTouched;\n  const valueChangeHandler = event => {\n    dispatch({\n      type: \"CHANGE_VALUE\",\n      newValue: event.target.value\n    });\n  };\n  const inputBlurHandler = event => {\n    dispatch({\n      type: \"TOUCHED\",\n      newValue: true\n    });\n  };\n  const reset = () => {\n    dispatch({\n      type: \"RESET\"\n    });\n  };\n  return {\n    value: enteredValue,\n    valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n_s(useInput, \"7PFjmNADM33prMPGqHYSfcdo330=\");\nexport default useInput;","map":{"version":3,"names":["useReducer","useState","initialInputState","value","isTouched","inputStateReducer","state","action","useInput","validateValue","_s","inputState","dispatch","enteredValue","setEnteredValue","valueIsTouched","setValueIsTouched","valueIsValid","hasError","valueChangeHandler","event","type","newValue","target","inputBlurHandler","reset"],"sources":["C:/Users/Pierce Ng/Desktop/Personal Projects/React - The Complete Guide/forms/src/hooks/use-input.js"],"sourcesContent":["import { useReducer, useState } from \"react\";\r\n\r\nconst initialInputState = {\r\n    value: '',\r\n    isTouched: false,\r\n};\r\n\r\nconst inputStateReducer = (state, action) => {\r\n\r\n    \r\n\r\n\r\n    return initialInputState;\r\n}\r\n\r\nconst useInput = (validateValue) => {\r\n\r\n    const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\r\n\r\n    const [enteredValue, setEnteredValue] = useState(\"\");\r\n    const [valueIsTouched, setValueIsTouched] = useState(false);\r\n\r\n    const valueIsValid = validateValue(enteredValue);\r\n    \r\n    const hasError = !valueIsValid && valueIsTouched;\r\n\r\n    const valueChangeHandler = (event) => {\r\n        dispatch({\r\n            type: \"CHANGE_VALUE\",\r\n            newValue: event.target.value,\r\n        })\r\n    }\r\n\r\n    const inputBlurHandler = (event) => {\r\n        dispatch({\r\n            type: \"TOUCHED\",\r\n            newValue: true,\r\n        })\r\n    }\r\n\r\n    const reset = () => {\r\n        dispatch({\r\n            type: \"RESET\",\r\n        })\r\n    }\r\n\r\n    return {\r\n        value: enteredValue, valueIsValid, hasError, valueChangeHandler, inputBlurHandler, reset\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n\r\nexport default useInput;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAE5C,MAAMC,iBAAiB,GAAG;EACtBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE;AACf,CAAC;AAED,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAKzC,OAAOL,iBAAiB;AAC5B,CAAC;AAED,MAAMM,QAAQ,GAAIC,aAAa,IAAK;EAAAC,EAAA;EAEhC,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGZ,UAAU,CAACK,iBAAiB,EAAEH,iBAAiB,CAAC;EAE/E,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMgB,YAAY,GAAGR,aAAa,CAACI,YAAY,CAAC;EAEhD,MAAMK,QAAQ,GAAG,CAACD,YAAY,IAAIF,cAAc;EAEhD,MAAMI,kBAAkB,GAAIC,KAAK,IAAK;IAClCR,QAAQ,CAAC;MACLS,IAAI,EAAE,cAAc;MACpBC,QAAQ,EAAEF,KAAK,CAACG,MAAM,CAACpB;IAC3B,CAAC,CAAC;EACN,CAAC;EAED,MAAMqB,gBAAgB,GAAIJ,KAAK,IAAK;IAChCR,QAAQ,CAAC;MACLS,IAAI,EAAE,SAAS;MACfC,QAAQ,EAAE;IACd,CAAC,CAAC;EACN,CAAC;EAED,MAAMG,KAAK,GAAGA,CAAA,KAAM;IAChBb,QAAQ,CAAC;MACLS,IAAI,EAAE;IACV,CAAC,CAAC;EACN,CAAC;EAED,OAAO;IACHlB,KAAK,EAAEU,YAAY;IAAEI,YAAY;IAAEC,QAAQ;IAAEC,kBAAkB;IAAEK,gBAAgB;IAAEC;EACvF,CAAC;AAGL,CAAC;AAACf,EAAA,CApCIF,QAAQ;AAwCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
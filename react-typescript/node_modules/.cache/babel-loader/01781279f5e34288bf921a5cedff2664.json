{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pierce Ng\\\\Desktop\\\\Personal Projects\\\\React - The Complete Guide\\\\react-typescript\\\\src\\\\components\\\\NewTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTodo = props => {\n  _s();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const enteredText = toDoTextRef.current.value;\n\n    if (enteredText.trim().length === 0) {\n      //throw an error\n      return;\n    }\n  };\n\n  const toDoTextRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Todo Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"text\",\n      ref: toDoTextRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTodo, \"ig7fX+EtKxYI96HVt6AiBJ3LvTA=\");\n\n_c = NewTodo;\nexport default NewTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTodo\");","map":{"version":3,"names":["React","useRef","NewTodo","props","submitHandler","e","preventDefault","enteredText","toDoTextRef","current","value","trim","length"],"sources":["C:/Users/Pierce Ng/Desktop/Personal Projects/React - The Complete Guide/react-typescript/src/components/NewTodo.tsx"],"sourcesContent":["import React, { FC, FormEvent, InputHTMLAttributes, useRef } from \"react\";\r\n\r\ntype NewToDoProps = {\r\n  addTodoHandler: (text: string) => void;\r\n};\r\n\r\nconst NewTodo: FC<NewToDoProps> = (props) => {\r\n  const submitHandler = (e: FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const enteredText = toDoTextRef.current!.value;\r\n\r\n    if (enteredText.trim().length === 0) {\r\n      //throw an error\r\n      return;\r\n    }\r\n  };\r\n\r\n  const toDoTextRef = useRef<HTMLInputElement>(null);\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <label>Todo Text</label>\r\n      <input type=\"text\" id=\"text\" ref={toDoTextRef} />\r\n      <button>Add Todo</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewTodo;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoDC,MAApD,QAAkE,OAAlE;;;AAMA,MAAMC,OAAyB,GAAIC,KAAD,IAAW;EAAA;;EAC3C,MAAMC,aAAa,GAAIC,CAAD,IAAkB;IACtCA,CAAC,CAACC,cAAF;IAEA,MAAMC,WAAW,GAAGC,WAAW,CAACC,OAAZ,CAAqBC,KAAzC;;IAEA,IAAIH,WAAW,CAACI,IAAZ,GAAmBC,MAAnB,KAA8B,CAAlC,EAAqC;MACnC;MACA;IACD;EACF,CATD;;EAWA,MAAMJ,WAAW,GAAGP,MAAM,CAAmB,IAAnB,CAA1B;EAEA,oBACE;IAAM,QAAQ,EAAEG,aAAhB;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,IAAI,EAAC,MAAZ;MAAmB,EAAE,EAAC,MAAtB;MAA6B,GAAG,EAAEI;IAAlC;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CArBD;;GAAMN,O;;KAAAA,O;AAuBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}